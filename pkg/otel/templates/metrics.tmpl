{{- define "metrics-node-receivers" -}}
{{- if .Metrics.Enabled -}}
prometheus/self:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 15s
          static_configs:
            - targets: ['0.0.0.0:{{ .Metrics.ListenPort }}']
{{ template "metrics-nodehost-receiver" . }}
{{- end -}}
{{- end -}}

{{- define "metrics-nodehost-receiver" -}}
{{- if and .Metrics.Enabled .Metrics.Spec.HostMetrics -}}
hostmetrics:
  {{ if .Containerized -}} root_path: /hostfs {{- end }}
  collection_interval: 15s
  scrapers:
    cpu: {}
    disk: {}
    load: {}      
    processes: {}
    filesystem:
      exclude_fs_types:
        fs_types:
        - ^autofs$
        - ^binfmt_misc$
        - ^bpf$
        - ^cgroup2?$
        - ^configfs$
        - ^debugfs$
        - ^devpts$
        - ^devtmpfs$
        - ^fusectl$
        - ^hugetlbfs$
        - ^iso9660$
        - ^mqueue$
        - ^nsfs$
        - ^overlay$
        - ^proc$
        - ^procfs$
        - ^pstore$
        - ^rpc_pipefs$
        - ^securityfs$
        - ^selinuxfs$
        - ^squashfs$
        - ^sysfs$
        - ^tracefs$
        match_type: regexp
      exclude_mount_points:
        mount_points:
        - ^/dev(/|$)
        - ^/proc(/|$)
        - ^/sys(/|$)
        - ^/var/lib/docker/.+(/|$)
        - ^/var/lib/kubelet/.+(/|$)
        match_type: regexp
{{ if .Containerized -}}
kubeletstats:
  collection_interval: 20s
  endpoint: "https://${HOST_IP}:10250"
  auth_type: "serviceAccount"
  insecure_skip_verify: true
{{- end -}}
{{- end -}}
{{- end -}}

{{- define "metrics-node-pipeline" -}}
{{ if .Metrics.Enabled }}
    metrics:
      receivers:
      {{- range .MetricReceivers }}
      - {{ . }}
      {{- end }}
      processors: [memory_limiter, resourcedetection/system]
      exporters: [otlp]
{{- end -}}
{{- end -}}

{{- define "metrics-self-telemetry" -}}
{{- if .Metrics.Enabled -}}
  telemetry:
    metrics:
      address : "127.0.0.1:{{ .Metrics.ListenPort }}"
{{- end -}}
{{- end -}}

{{- define "metrics-self-receiver" -}}
{{- if .Metrics.Enabled -}}
  prometheus/self:
    config:
      scrape_configs:
        - job_name: 'otel-collector'
          scrape_interval: 15s
          static_configs:
            - targets: ['127.0.0.1:{{ .Metrics.ListenPort }}']
{{- end -}}
{{- end -}}

{{- define "metrics-prometheus-receiver" -}}
{{- if and .Metrics.Enabled .Metrics.Spec.AdditionalScrapeConfigs -}}
  prometheus/additional:
    config:
      scrape_configs:
      {{- range .Metrics.Spec.AdditionalScrapeConfigs }}
        - job_name: {{ .JobName }}
          scrape_interval : {{ .ScrapeInterval }}
          static_configs:
          - targets: {{ .Targets }}
      {{- end }}
{{- end -}}
{{- end -}}

{{- define "metrics-prometheus-discoverer" -}}
{{- if and .Metrics.Enabled .Metrics.DiscoveredScrapeCfg -}}
  prometheus/discovered:
    config:
      scrape_configs:
{{ indent 8 .Metrics.DiscoveredScrapeCfg }}
{{- end -}}
{{- end -}}

{{- define "metrics-remotewrite-exporter" -}}
{{- if .Metrics.Enabled -}}
  prometheusremotewrite:
    endpoint: "{{ .Metrics.RemoteWriteEndpoint }}"
    {{ if and .Metrics.Spec.Wal .Metrics.Spec.Wal.Enabled -}}
    wal :
      directory: {{ .Metrics.WALDir }}
      buffer_size: {{ .Metrics.Spec.Wal.BufferSize }}
      truncate_frequency : {{ protoDurToString .Metrics.Spec.Wal.TruncateFrequency }}
    {{- end }}
    resource_to_telemetry_conversion:
      enabled: true 
    tls:
      insecure: true
  {{- end -}}
{{- end -}}

{{- define "metrics-remotewrite-pipeline" -}}
{{- if .Metrics.Enabled }}
    metrics/internal:
      receivers:
        - otlp
      processors:
      - memory_limiter
      - batch
      exporters: [prometheusremotewrite]
    metrics/external:
      receivers:
      {{- range .MetricReceivers }}
      - {{ . }}
      {{- end }} 
      processors: 
      - memory_limiter
      - batch
      - filter/metrics
      exporters: [prometheusremotewrite]
{{- end -}}
{{- end -}}

{{- define "metrics-prometheus-processor" -}}
{{- if.Metrics.Enabled -}}
  filter/metrics:
    metrics:
      exclude:
        match_type: regexp
        metric_names:
          - "kube.+annotations"
{{- end -}}
{{- end -}}

{{- define "metrics-system-processor" -}}
{{ if .Metrics.Enabled }}
  resourcedetection/system:
    detectors: ["system"]
    system:
      hostname_sources: ["lookup"]
{{- end -}}
{{- end -}}

