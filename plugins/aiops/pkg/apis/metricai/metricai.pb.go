// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0-devel
// 	protoc        v1.0.0
// source: github.com/rancher/opni/plugins/aiops/pkg/apis/metricai/metricai.proto

package metricai

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetricAIJobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId            string              `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	JobSubmittedTime float32             `protobuf:"fixed32,2,opt,name=jobSubmittedTime,proto3" json:"jobSubmittedTime,omitempty"`
	JobStatus        string              `protobuf:"bytes,3,opt,name=jobStatus,proto3" json:"jobStatus,omitempty"`
	JobRequest       *MetricAIJobRequest `protobuf:"bytes,4,opt,name=jobRequest,proto3,oneof" json:"jobRequest,omitempty"`
	JobResult        string              `protobuf:"bytes,5,opt,name=jobResult,proto3" json:"jobResult,omitempty"`
}

func (x *MetricAIJobStatus) Reset() {
	*x = MetricAIJobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricAIJobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricAIJobStatus) ProtoMessage() {}

func (x *MetricAIJobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricAIJobStatus.ProtoReflect.Descriptor instead.
func (*MetricAIJobStatus) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP(), []int{0}
}

func (x *MetricAIJobStatus) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *MetricAIJobStatus) GetJobSubmittedTime() float32 {
	if x != nil {
		return x.JobSubmittedTime
	}
	return 0
}

func (x *MetricAIJobStatus) GetJobStatus() string {
	if x != nil {
		return x.JobStatus
	}
	return ""
}

func (x *MetricAIJobStatus) GetJobRequest() *MetricAIJobRequest {
	if x != nil {
		return x.JobRequest
	}
	return nil
}

func (x *MetricAIJobStatus) GetJobResult() string {
	if x != nil {
		return x.JobResult
	}
	return ""
}

type MetricAIJobList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MetricAIJobId `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MetricAIJobList) Reset() {
	*x = MetricAIJobList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricAIJobList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricAIJobList) ProtoMessage() {}

func (x *MetricAIJobList) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricAIJobList.ProtoReflect.Descriptor instead.
func (*MetricAIJobList) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP(), []int{1}
}

func (x *MetricAIJobList) GetItems() []*MetricAIJobId {
	if x != nil {
		return x.Items
	}
	return nil
}

type MetricAIJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterId string `protobuf:"bytes,1,opt,name=clusterId,proto3" json:"clusterId,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *MetricAIJobRequest) Reset() {
	*x = MetricAIJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricAIJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricAIJobRequest) ProtoMessage() {}

func (x *MetricAIJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricAIJobRequest.ProtoReflect.Descriptor instead.
func (*MetricAIJobRequest) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP(), []int{2}
}

func (x *MetricAIJobRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *MetricAIJobRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type MetricAIJobId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
}

func (x *MetricAIJobId) Reset() {
	*x = MetricAIJobId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricAIJobId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricAIJobId) ProtoMessage() {}

func (x *MetricAIJobId) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricAIJobId.ProtoReflect.Descriptor instead.
func (*MetricAIJobId) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP(), []int{3}
}

func (x *MetricAIJobId) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type MetricAIJobDeleteStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *MetricAIJobDeleteStatus) Reset() {
	*x = MetricAIJobDeleteStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricAIJobDeleteStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricAIJobDeleteStatus) ProtoMessage() {}

func (x *MetricAIJobDeleteStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricAIJobDeleteStatus.ProtoReflect.Descriptor instead.
func (*MetricAIJobDeleteStatus) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP(), []int{4}
}

func (x *MetricAIJobDeleteStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MetricAIJobDeleteStatus) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type MetricAIJobSubmitStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	JobSubmittedTime string `protobuf:"bytes,2,opt,name=jobSubmittedTime,proto3" json:"jobSubmittedTime,omitempty"`
	JobId            string `protobuf:"bytes,3,opt,name=jobId,proto3" json:"jobId,omitempty"`
}

func (x *MetricAIJobSubmitStatus) Reset() {
	*x = MetricAIJobSubmitStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricAIJobSubmitStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricAIJobSubmitStatus) ProtoMessage() {}

func (x *MetricAIJobSubmitStatus) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricAIJobSubmitStatus.ProtoReflect.Descriptor instead.
func (*MetricAIJobSubmitStatus) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP(), []int{5}
}

func (x *MetricAIJobSubmitStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MetricAIJobSubmitStatus) GetJobSubmittedTime() string {
	if x != nil {
		return x.JobSubmittedTime
	}
	return ""
}

func (x *MetricAIJobSubmitStatus) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

type MetricAIGetJobResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      string             `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Description string             `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	JobStatus   *MetricAIJobStatus `protobuf:"bytes,3,opt,name=jobStatus,proto3,oneof" json:"jobStatus,omitempty"`
}

func (x *MetricAIGetJobResult) Reset() {
	*x = MetricAIGetJobResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricAIGetJobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricAIGetJobResult) ProtoMessage() {}

func (x *MetricAIGetJobResult) ProtoReflect() protoreflect.Message {
	mi := &file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricAIGetJobResult.ProtoReflect.Descriptor instead.
func (*MetricAIGetJobResult) Descriptor() ([]byte, []int) {
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP(), []int{6}
}

func (x *MetricAIGetJobResult) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MetricAIGetJobResult) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricAIGetJobResult) GetJobStatus() *MetricAIJobStatus {
	if x != nil {
		return x.JobStatus
	}
	return nil
}

var File_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto protoreflect.FileDescriptor

var file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDesc = []byte{
	0x0a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x2f, 0x61, 0x69, 0x6f, 0x70, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x61, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x61, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x6a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x6a, 0x6f, 0x62, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x6a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x40, 0x0a, 0x0f, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f,
	0x62, 0x49, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x50, 0x0a, 0x12, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x25, 0x0a, 0x0d,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x17, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a,
	0x6f, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x17, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x6a,
	0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x9e, 0x01,
	0x0a, 0x14, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x3e, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x48, 0x00, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x32, 0xc9,
	0x03, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x12, 0x59, 0x0a, 0x08, 0x4c,
	0x69, 0x73, 0x74, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x19, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x12, 0x12, 0x2f, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x81, 0x01, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x4a, 0x6f, 0x62, 0x12, 0x1c, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x22, 0x2b, 0x2f,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x6a,
	0x6f, 0x62, 0x2f, 0x7b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x2f, 0x7b,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x12, 0x6d, 0x0a, 0x0a, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x49,
	0x64, 0x1a, 0x21, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a, 0x1b, 0x2f, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x6a, 0x6f,
	0x62, 0x2f, 0x7b, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x7d, 0x12, 0x6f, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x17, 0x2e, 0x6d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x4a, 0x6f, 0x62,
	0x49, 0x64, 0x1a, 0x1e, 0x2e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x61, 0x69, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x41, 0x49, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x69, 0x2f, 0x67, 0x65, 0x74, 0x6a, 0x6f, 0x62, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2f, 0x7b, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x7d, 0x42, 0x39, 0x5a, 0x37, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x72,
	0x2f, 0x6f, 0x70, 0x6e, 0x69, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2f, 0x61, 0x69,
	0x6f, 0x70, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescOnce sync.Once
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescData = file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDesc
)

func file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescGZIP() []byte {
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescOnce.Do(func() {
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescData = protoimpl.X.CompressGZIP(file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescData)
	})
	return file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDescData
}

var file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_goTypes = []interface{}{
	(*MetricAIJobStatus)(nil),       // 0: metricai.MetricAIJobStatus
	(*MetricAIJobList)(nil),         // 1: metricai.MetricAIJobList
	(*MetricAIJobRequest)(nil),      // 2: metricai.MetricAIJobRequest
	(*MetricAIJobId)(nil),           // 3: metricai.MetricAIJobId
	(*MetricAIJobDeleteStatus)(nil), // 4: metricai.MetricAIJobDeleteStatus
	(*MetricAIJobSubmitStatus)(nil), // 5: metricai.MetricAIJobSubmitStatus
	(*MetricAIGetJobResult)(nil),    // 6: metricai.MetricAIGetJobResult
	(*emptypb.Empty)(nil),           // 7: google.protobuf.Empty
}
var file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_depIdxs = []int32{
	2, // 0: metricai.MetricAIJobStatus.jobRequest:type_name -> metricai.MetricAIJobRequest
	3, // 1: metricai.MetricAIJobList.items:type_name -> metricai.MetricAIJobId
	0, // 2: metricai.MetricAIGetJobResult.jobStatus:type_name -> metricai.MetricAIJobStatus
	7, // 3: metricai.MetricAI.ListJobs:input_type -> google.protobuf.Empty
	2, // 4: metricai.MetricAI.SubmitJob:input_type -> metricai.MetricAIJobRequest
	3, // 5: metricai.MetricAI.DeleteJobs:input_type -> metricai.MetricAIJobId
	3, // 6: metricai.MetricAI.GetJobResult:input_type -> metricai.MetricAIJobId
	1, // 7: metricai.MetricAI.ListJobs:output_type -> metricai.MetricAIJobList
	5, // 8: metricai.MetricAI.SubmitJob:output_type -> metricai.MetricAIJobSubmitStatus
	4, // 9: metricai.MetricAI.DeleteJobs:output_type -> metricai.MetricAIJobDeleteStatus
	6, // 10: metricai.MetricAI.GetJobResult:output_type -> metricai.MetricAIGetJobResult
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_init() }
func file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_init() {
	if File_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricAIJobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricAIJobList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricAIJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricAIJobId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricAIJobDeleteStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricAIJobSubmitStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricAIGetJobResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_goTypes,
		DependencyIndexes: file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_depIdxs,
		MessageInfos:      file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_msgTypes,
	}.Build()
	File_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto = out.File
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_rawDesc = nil
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_goTypes = nil
	file_github_com_rancher_opni_plugins_aiops_pkg_apis_metricai_metricai_proto_depIdxs = nil
}
